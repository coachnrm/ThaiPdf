@page "/person/add"
@page "/person/edit/{userId:int}"
@using PdfTest.Service
@using PdfTest.Models
@using Microsoft.JSInterop;
@using Microsoft.AspNetCore.Mvc;
@inject IPersonService personService
@inject PdfServiceById PdfServiceById
@inject IJSRuntime JS

<div class="row">
    <div class="col-md-6">
       <EditForm Model="@person" OnValidSubmit="Save" FormName="person">
           <DataAnnotationsValidator/>
           <div class="form-group">
              <label for="Name">ชื่อ</label>
             <InputText class="form-control" @bind-Value="person.Name"/>
             <ValidationMessage For="@(()=>person.Name)"/>
           </div>
            <div class="form-group">
              <label for="Name">อาชีพ</label>
             <InputText class="form-control" @bind-Value="person.Occupation"/>
             <ValidationMessage For="@(()=>person.Occupation)"/>
           </div>
            <div class="my-2">
                @message
            </div>

            <div class="my-2">
                <button type="submit" class="btn btn-primary">Save</button>
                <button @onclick="DownloadPdf" class="btn btn-success">Print by Id</button>
            </div>

       </EditForm>
    </div>
</div>


@code {
    [Parameter]
    public int UserId {get; set;}
    private string message = string.Empty;
    Person person = new();
    private string Title = "Add Person";

    private void Save()
    {
       message = "wait...";
        if (personService.AddUpdate(person))
        {
            message = "Sucessfully added";
            person = new();
        }
        else
        {
            message = "Could not saved";
        }
    }

     protected override void OnInitialized()
    {
        person = personService.FindById(UserId);

        if (UserId > 0)
        {
            Title = "Update Person";
            person = personService.FindById(UserId);
        }
        base.OnInitialized();
    }

     private async Task DownloadPdf()
    {
        if (person != null)
        {
            var pdfBytes = await PdfServiceById.GeneratePdfAsync(person);
            var base64 = Convert.ToBase64String(pdfBytes);
            var url = $"data:application/pdf;base64,{base64}";

            // Trigger the download in the browser
            await JS.InvokeVoidAsync("open", url, "_blank");
        }
    }

}